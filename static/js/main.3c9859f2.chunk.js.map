{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/comments.js","Root.js","actions/index.js","components/CommentBox.js","components/CommentList.js","components/App.js","index.js"],"names":["SAVE_COMMENT","combineReducers","comments","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","store","createStore","reducers","saveComment","comment","CommentBox","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","react_default","a","createElement","onSubmit","this","onChange","Component","connect","actions","CommentList","App","Fragment","components_CommentBox","components_CommentList","ReactDOM","render","es","children","components_App","document","querySelector"],"mappings":"wPAAaA,EAAe,eCGbC,cAAgB,CAC3BC,SCFW,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAOC,EAAOC,MACV,KAAKR,EACL,SAAAS,OAAAC,OAAAC,EAAA,EAAAD,CAAWP,GAAX,CAAkBI,EAAOK,UAC7B,QACI,OAAOT,MCFTU,EAAQC,YAAYC,EAAU,4CCH7B,SAASC,EAAYC,GACxB,MAAO,CACHT,KAAMR,EACNY,QAASK,OCDXC,6MAEFf,MAAM,CAAEc,QAAS,MAEjBE,aAAe,SAACC,GACZC,EAAKC,SAAS,CAAEL,QAAQG,EAAMG,OAAOC,WAGzCC,aAAe,SAACL,GACZA,EAAMM,iBAENL,EAAKM,MAAMX,YAAYK,EAAKlB,MAAMc,SAElCI,EAAKC,SAAS,CAAEL,QAAS,8EAIzB,OACIW,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKP,cACjBG,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YAAUN,MAAOQ,KAAK7B,MAAMc,QAASgB,SAAUD,KAAKb,eACpDS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yCAtBKI,aA6BVC,cAAQ,KAAMC,EAAdD,CAAuBjB,GC3BvBmB,EAJK,WAChB,OAAOT,EAAAC,EAAAC,cAAA,2BCWIQ,EAVH,WACR,OACIV,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,SAAP,KACIX,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,QCHZC,IAASC,OACLf,EAAAC,EAAAC,cLAW,SAACH,GACZ,OACIC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAU/B,MAAOA,GACZc,EAAMkB,WKHf,KACIjB,EAAAC,EAAAC,cAACgB,EAAD,OAEJC,SAASC,cAAc","file":"static/js/main.3c9859f2.chunk.js","sourcesContent":["export const SAVE_COMMENT = 'save_comment';","import { combineReducers } from 'redux';\nimport commentsReducer from './comments';\n\nexport default combineReducers({\n    comments: commentsReducer\n});","import { SAVE_COMMENT } from '../actions/types';\n\nexport default (state = [], action) => {\n    switch(action.type){\n        case SAVE_COMMENT:\n        return [...state, action.payload];\n    default:\n        return state;\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {});\n\nexport default (props) => {\n    return (\n        <Provider store={store}>\n            {props.children}\n        </Provider>\n    )\n}","import { SAVE_COMMENT } from './types';\n\nexport function saveComment(comment) {\n    return {\n        type: SAVE_COMMENT,\n        payload: comment\n    };\n}","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass CommentBox extends Component {\n\n    state={ comment: ''};\n\n    handleChange = (event) => {\n        this.setState({ comment:event.target.value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.saveComment(this.state.comment);\n\n        this.setState({ comment: '' });\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <h4>Add a Comment</h4>\n                <textarea value={this.state.comment} onChange={this.handleChange}/>\n                <div>\n                    <button>Submit Comment</button>\n                </div>\n            </form>\n        )\n    }        \n}\n\nexport default connect(null, actions)(CommentBox);","import React from 'react';\n\nconst CommentList = () => {\n    return <div>CommentList</div>\n}\n\nexport default CommentList;","import React from 'react';\nimport CommentBox from './CommentBox';\nimport CommentList from './CommentList';\n\nconst App = () => {\n    return (\n        <React.Fragment>\n            <h1>Travis test</h1>\n            <CommentBox/>\n            <CommentList/>\n        </React.Fragment>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\n\nimport App from './components/App';\n\nReactDOM.render(\n    <Root>\n        <App/>\n    </Root>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}